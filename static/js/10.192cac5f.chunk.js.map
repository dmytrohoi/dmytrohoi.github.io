{"version":3,"sources":["components/about/skills/SkillsStore.js","components/about/skills/SkillsPane.js","components/about/summary/SummaryPane.js","components/about/links/LinksStore.js","components/about/links/LinksPane.js","components/about/badges/BadgesStore.js","components/about/badges/Badges.js","components/about/About.js"],"names":["filledStar","color","size","emptyStar","starStyle","width","textAlign","whiteSpace","stars","tick","style","one","two","three","four","five","cellType","title","level","_","description","href","SkillsGrid","lazy","SkillPane","state","isShown","togglePane","setState","Fragment","Dialog","this","onCloseComplete","hasFooter","height","fallback","Spinner","Button","intent","iconBefore","EyeOpenIcon","onClick","margin","Pill","display","marginLeft","skills","length","React","Component","SummaryInfo","Summary","InfoSignIcon","links","icon","githubIcon","url","twitterIcon","linkedinIcon","devIcon","habrIcon","telegramIcon","facebookIcon","wavingHand","HomePaneLink","is","target","appearance","key","LinksPane","map","link","Badge","image","alt","Link","marginRight","as","Image","src","Pane","badges","badge","About","flexWrap","justifyContent","alignItems","padding","type","srcSet","paddingLeft","Heading","marginTop","marginBottom","pythonIcon","DocumentOpenIcon","Badges"],"mappings":"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","file":"static/js/10.192cac5f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { TickCircleIcon, StarIcon, StarEmptyIcon, Link } from \"evergreen-ui\";\nimport { _ } from 'gridjs-react';\n\nconst filledStar = <StarIcon color=\"success\" size={8} />\nconst emptyStar = <StarEmptyIcon size={8} />\n\nconst starStyle = {\n  width: \"100%\",\n  textAlign: \"center\",\n  whiteSpace: \"nowrap\"\n}\n\nconst stars = {\n  tick: <div style={starStyle}><TickCircleIcon color=\"success\"/></div>,\n  one: <div style={starStyle}>{filledStar}{emptyStar}{emptyStar}{emptyStar}{emptyStar}</div>,\n  two: <div style={starStyle}>{filledStar}{filledStar}{emptyStar}{emptyStar}{emptyStar}</div>,\n  three: <div style={starStyle}>{filledStar}{filledStar}{filledStar}{emptyStar}{emptyStar}</div>,\n  four: <div style={starStyle}>{filledStar}{filledStar}{filledStar}{filledStar}{emptyStar}</div>,\n  five: <div style={starStyle}>{filledStar}{filledStar}{filledStar}{filledStar}{filledStar}</div>\n}\n\nexport default [\n  { cellType: \"language\", title: \"Python\", level: _(stars.four), description: \"Version: 2.7, 3. Many personal projects and work experience. A custom framework for testing an Android application has been implemented.\" },\n  { cellType: \"language\", title: \"JavaScript\", level: _(stars.three), description: \"This site is implemented in ReactJS.\" },\n  { cellType: \"language\", title: \"Go\", level: _(stars.two), description: \"The training continues.\" },\n  { cellType: \"language\", title: \"Ruby\", level: _(stars.three), description: \"Scope: HTML parsing, testing.\" },\n  { cellType: \"language\", title: \"sh\", level: _(stars.four), description: \"Because I am a regular user of Ubuntu and Arch.\" },\n  { cellType: \"library\", title: \"pytest\", level: _(stars.tick), description: _(<div>Created own Test Framework for specific device on Android Pie. <Link href=\"https://habr.com/ru/post/472766/\" color=\"neutral\">Written article for Habr.com</Link>.</div>) },\n  { cellType: \"library\", title: \"jest\", level: _(stars.four), description: _(<div>Improved tests for <Link href=\"https://github.com/dmytrohoi/afilters.js\" color=\"neutral\">AFilters.js library</Link>.</div>) },\n  { cellType: \"library\", title: \"appium\", level: _(stars.tick), description: \"Debugging and testing Android device.\" },\n  { cellType: \"library\", title: \"Django\", level: _(stars.three), description: \"Used only for personal projects.\" },\n  { cellType: \"library\", title: \"python-telegram-bot\", level: _(stars.tick), description: \"Created many Telegram Bots for freelance. Contribution on GitHub.\" },\n  { cellType: \"library\", title: \"aiogram\", level: _(stars.tick), description: \"Created many Telegram Bots for freelance.\" },\n  { cellType: \"library\", title: \"SQLAlchemy, gino\", level: _(stars.tick), description: \"Connecting to PostgreSQL and SQLite for bots.\" },\n  { cellType: \"library\", title: \"requests\", level: _(stars.tick), description: \"Parsing sites and using the REST API.\" },\n  { cellType: \"library\", title: \"tkinter\", level: _(stars.tick), description: \"GUI.\" },\n  { cellType: \"framework\", title: \"Eel\", level: _(stars.tick), description: \"Electron-like framework for Python.\" },\n  { cellType: \"format\", title: \"JSON, XML, YAML\", level: _(stars.tick), description: \"Basic knowledge for programmers\" },\n  { cellType: \"language\", title: \"SQL\", level: _(stars.four), description: \"I used it in my projects to queries the DB (PostgreSQL, SQLAlchemy)\" },\n  { cellType: \"language\", title: \"WebQL\", level: _(stars.tick), description: \"Something like SQL for parsing sites.\" },\n  { cellType: \"sdlc\", title: \"OOP\", level: _(stars.tick), description: \"Commercial experience.\" },\n  { cellType: \"sdlc\", title: \"Agile\", level: _(stars.tick), description: \"Commercial experience.\" },\n  { cellType: \"format\", title: \"HTML, CSS\", level: _(stars.tick), description: \"I used it for commercial and private projects (sample, gwaramedia.com.ua). Understanding Bootstrap.\" },\n  { cellType: \"format\", title: \"Markdown, reStructuredText\", level: _(stars.tick), description: \"Documentation (aka Sphinx) and GitHub usage.\" },\n  { cellType: \"ide\", title: \"VS Code\", level: _(stars.tick), description: \"My main IDE.\" },\n  { cellType: \"tool\", title: \"regex\", level: _(stars.tick), description: \"Great experience with Python, JS and clear.\" },\n  { cellType: \"tool\", title: \"Docker\", level: _(stars.tick), description: \"CI/CD tool for development/profuction.\" },\n  { cellType: \"tool\", title: \"zsh\", level: _(stars.tick), description: \"Best shell.\" },\n  { cellType: \"tool\", title: \"tmux, screen\", level: _(stars.tick), description: \"Linux must have.\" },\n  { cellType: \"tool\", title: \"cron\", level: _(stars.tick), description: \"Very helpful tool.\" },\n  { cellType: \"tool\", title: \"adb\", level: _(stars.tick), description: \"I used it the Android debugger tool with UIAutomator to manipulate an Android device\" },\n  { cellType: \"tool\", title: \"VIM\", level: _(stars.four), description: \"Like the concept.\" },\n  { cellType: \"tool\", title: \"Jira\", level: _(stars.tick), description: \"The most common management tool.\" },\n  { cellType: \"tool\", title: \"Jama\", level: _(stars.tick), description: \"Requirements management system.\" },\n  { cellType: \"tool\", title: \"GitHub\", level: _(stars.tick), description: _(<div>Best social network for programmers. <Link href=\"https://habr.com/ru/post/474668/\" color=\"neutral\">Written article about Actions for Habr.com</Link>.</div>) },\n  { cellType: \"tool\", title: \"Jupyter\", level: _(stars.tick), description: \"Scope: mathplotlib, Pandas. I used Jupyter and Jupyter-Lab to create markdown-python notebooks, personal and project databases and presentations (with Rise extension).\" },\n\n]","import React, { lazy, Suspense } from \"react\";\nimport { Dialog, Button, EyeOpenIcon, Pill } from 'evergreen-ui';\n\nimport skills from './SkillsStore';\nimport Spinner from '../../common/Spinner';\n// import SkillsGrid from './Skills';\n\n\nconst SkillsGrid = lazy(() => import(\"./Skills\"))\n\n\nclass SkillPane extends React.Component {\n\n  state = {\n    isShown: false\n  }\n\n  togglePane = (isShown) => this.setState({ isShown });\n\n  render() {\n    return (\n    <React.Fragment>\n      <Dialog\n        isShown={this.state.isShown}\n        title=\"My Skills\"\n        onCloseComplete={() => this.togglePane(false)}\n        hasFooter={false}\n        height=\"80%\"\n        width=\"75%\"\n      >\n        <Suspense fallback={<Spinner />}>\n          <SkillsGrid />\n        </Suspense>\n\n      </Dialog>\n      <Button\n        style={{color: \"black\"}}\n        height={32}\n        intent=\"none\"\n        iconBefore={EyeOpenIcon}\n        onClick={() => this.togglePane(true)}\n        margin={8}\n      >\n        Skills <Pill display=\"inline-flex\" marginLeft={8}>{skills.length}</Pill>\n      </Button>\n    </React.Fragment>\n  )};\n}\n\nexport default SkillPane","import React, { lazy, Suspense } from \"react\";\nimport { Dialog, Button, InfoSignIcon } from 'evergreen-ui';\n\nimport Spinner from '../../common/Spinner';\n\n\nconst SummaryInfo = lazy(() => import(\"./SummaryInfo\"))\n\n\nclass Summary extends React.Component {\n\n  state = {\n    isShown: false\n  }\n\n  togglePane = (isShown) => this.setState({ isShown });\n\n  render() {\n    return (\n    <React.Fragment>\n      <Dialog\n        isShown={this.state.isShown}\n        title=\"Summary\"\n        onCloseComplete={() => this.togglePane(false)}\n        hasFooter={false}\n        height=\"80%\"\n        width=\"75%\"\n      >\n        <Suspense fallback={<Spinner />}>\n          <SummaryInfo />\n        </Suspense>\n      </Dialog>\n      <Button\n        style={{color: \"black\"}}\n        height={32}\n        intent=\"none\"\n        iconBefore={InfoSignIcon}\n        onClick={() => this.togglePane(true)}\n        margin={8}\n      >\n        Summary\n      </Button>\n    </React.Fragment>\n  )};\n}\n\nexport default Summary","import telegramIcon from '@iconify/icons-logos/telegram';\nimport facebookIcon from '@iconify/icons-logos/facebook';\nimport linkedinIcon from '@iconify/icons-cib/linkedin';\nimport twitterIcon from '@iconify/icons-logos/twitter';\nimport devIcon from '@iconify/icons-fa-brands/dev';\nimport githubIcon from '@iconify/icons-fa-brands/github';\nimport habrIcon from '@iconify/icons-cib/habr';\nimport wavingHand from '@iconify-icons/noto/waving-hand';\n\n\n\nexport const links = [\n  { icon: githubIcon, title: \"Github\", url: \"https://github.com/dmytrohoi\", color: \"black\" },\n  { icon: twitterIcon, title: \"Twitter\", url: \"https://twitter.com/dmytrohoi\" },\n  { icon: linkedinIcon, title: \"Linkedin\", url: \"https://linkedin.com/in/dmytrohoi\", color: \"#0e76a8\" },\n  { icon: devIcon, title: \"Dev.To\", url: \"https://dev.to/dmytrohoi\", color: \"black\" },\n  { icon: habrIcon, title: \"Habr.com\", url: \"https://habr.com/users/dmytrohoi\", color: \"#89aab8\" },\n  { icon: telegramIcon, title: \"Telegram\", url: \"https://t.me/dmytrohoi\" },\n  { icon: facebookIcon, title: \"Facebook\", url: \"https://fb.com/dmytrohoi\" },\n  { icon: wavingHand, title: \"Clubhouse\", url: \"https://joinclubhouse.com/@dmytrohoi\", size: \"1.5em\" },\n]\n\n// export const buttons = [\n//   { icon: telegramIcon, title: \"higaindev\", url: \"https://t.me/higaindev\", indent: \"none\" },\n//   { icon: hryvniaaltIcon, title: \"Donate\", url: \"https://dmytrohoi.com/donate\", indent: \"warning\" },\n// ]\n","import React from \"react\";\nimport { Button } from 'evergreen-ui';\n\nimport { InlineIcon } from '@iconify/react';\n\nimport { links } from './LinksStore';\n\n\nconst HomePaneLink = ({ icon, color, title, url: href, style, size = \"1.25em\" }) => (\n  <Button is=\"a\" target=\"blank\" appearance=\"minimal\" height={32} intent=\"none\" margin={4} key={title} {...{href, style}}>\n    <InlineIcon width={size} height={size} {...{icon, color}}>\n      {title}\n    </InlineIcon>\n  </Button>\n)\n\n// const HomePaneButton = ({url, indent, title, color, icon}) => (\n//   <Button is=\"a\" href={url} target=\"blank\" appearance=\"minimal\" height={32} intent={indent} margin={4} key={title}>\n//     <InlineIcon width=\"1.25em\" height=\"1.25em\" icon={icon} color={color} style={{marginRight: 8}} />\n//     {title}\n//   </Button>\n// )\n\nconst LinksPane = () => (\n    <div>\n      {links.map(link => <HomePaneLink key={link.title} {...link} />)}\n      <br />\n      {/* {buttons.map(button => <HomePaneButton key={button.title} {...button} />)} */}\n    </div>\n)\n\nexport default LinksPane;\n","\n//                     👓[![StackOverflow](https://img.shields.io/stackexchange/stackoverflow/r/9468922?logo=stackoverflow)](https://stackoverflow.com/users/9468922/dmytro-hoi)\n//                         [![Habr karma](https://img.shields.io/endpoint?url=https%3A%2F%2Fbadges.dmytrohoi.workers.dev%2F%3Fq%3DHabr)](https://habr.com/users/dmytrohoi)\n//                             [![CodeWars info](https://www.codewars.com/users/dmytrohoi/badges/micro)](https://www.codewars.com/users/dmytrohoi)\n\nexport default [\n    {\n        \"link\": \"https://t.me/higaindev\",\n        \"image\": \"https://img.shields.io/badge/channel-higaindev-0088cc?style=flat&logo=telegram\",\n        \"alt\": \"Telegram Channel\"\n    },{\n        \"link\": \"/donate\",\n        \"image\": \"https://img.shields.io/badge/donate-%E2%82%B4%2F%24-green?style=flat&logo=contactless-payment\",\n        \"alt\": \"Telegram Channel\"\n    },{},\n    // {\n    //     \"link\": \"https://stackoverflow.com/users/9468922/dmytro-hoi\",\n    //     \"image\": \"https://img.shields.io/stackexchange/stackoverflow/r/9468922?logo=stackoverflow&label=rep\",\n    //     \"alt\": \"StackOverflow\"\n    // },\n    {\n        \"link\": \"https://habr.com/users/dmytrohoi\",\n        \"image\": \"https://img.shields.io/endpoint?url=https%3A%2F%2Fbadges.dmytrohoi.workers.dev%2F%3Fq%3DHabr&label=karma\",\n        \"alt\": \"Habr karma\"\n    },{\n        \"link\": \"https://www.codewars.com/users/dmytrohoi\",\n        \"image\": \"https://www.codewars.com/users/dmytrohoi/badges/micro\",\n        \"alt\": \"CodeWars info\"\n    },\n]","import React from \"react\";\nimport { Pane, Image, Link } from 'evergreen-ui';\n\n\n// Custom components\n// import Badge from './Badge';\nimport badges from './BadgesStore';\n\nconst Badge = ({link, image, alt}) => (\n    link ? <Link height=\"1.25em\" style={{marginRight: 8}} as=\"a\" href={link} ><Image src={image} alt={alt} /></Link> : <br />\n)\n\nexport default () => (\n    <Pane margin={4}>{badges.map(badge => <Badge key={badge.alt} {...badge} />)}</Pane>\n)\n","import React from \"react\";\nimport { Pane, Heading, Button, DocumentOpenIcon } from 'evergreen-ui';\n\nimport { InlineIcon } from '@iconify/react';\nimport pythonIcon from '@iconify/icons-logos/python';\n\n// Custom components\nimport SkillPane from './skills/SkillsPane';\nimport Summary from './summary/SummaryPane';\nimport LinksPane from \"./links/LinksPane\";\nimport Badges from './badges/Badges';\n\n\nexport default function About () {\n    return (\n      <Pane\n        display=\"flex\"\n        flexWrap=\"wrap\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        padding={16}\n      >\n\n        <Pane>\n          <picture>\n            <source type=\"image/webp\" srcSet=\"/img/profile.webp\" />\n            <source type=\"image/png\" srcSet=\"/img/profile.png\" />\n            <img src='/img/profile.png' alt=\"Dmytro Hoi\" width=\"200px;\"/>\n          </picture>\n        </Pane>\n\n        <Pane\n          paddingLeft=\"1em\"\n        >\n          <Heading size={800} marginTop=\"default\">Dmytro Hoi</Heading>\n          <Heading size={600} marginTop=\"default\" marginBottom=\"default\"><InlineIcon icon={pythonIcon} /> Python Developer</Heading>\n          <Summary />\n          <SkillPane />\n          <Button\n            height={32}\n            margin={8}\n            intent=\"none\"\n            iconBefore={DocumentOpenIcon}\n            is=\"a\" href=\"/cv\" target=\"blank\"\n          >\n            CV\n          </Button>\n          <br />\n          <LinksPane />\n          <br />\n          <Badges />\n        </Pane>\n      </Pane>\n    )\n}\n"],"sourceRoot":""}