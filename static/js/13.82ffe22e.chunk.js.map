{"version":3,"sources":["components/about/skills/SkillsPane.js","components/about/summary/SummaryPane.js","components/about/links/HomePaneLink.js","stores/LinksStore.js","components/about/links/LinksPane.js","components/about/badges/Badge.js","components/about/badges/Badges.js","components/about/About.js"],"names":["SkillsGrid","lazy","SkillPane","useState","isShown","setIsShown","skills","setSkills","useEffect","length","fetch","then","resp","json","resp_data","Fragment","Dialog","title","onCloseComplete","hasFooter","height","width","Button","style","color","intent","iconBefore","EyeOpenIcon","onClick","margin","isLoading","Pill","display","marginLeft","SummaryInfo","Summary","state","togglePane","setState","this","fallback","Spinner","InfoSignIcon","React","Component","HomePaneLink","icon","href","url","size","is","target","appearance","maxWidth","key","Image","src","links","githubIcon","twitterIcon","linkedinIcon","devIcon","habrIcon","telegramIcon","facebookIcon","wavingHand","buttons","indent","hryvniaaltIcon","LinksPane","store","map","link","Badge","image","alt","Link","marginRight","as","badges","setBadges","Pane","badge","About","flexWrap","justifyContent","alignItems","padding","type","srcSet","paddingLeft","Heading","marginTop","marginBottom","pythonIcon","DocumentOpenIcon","Badges"],"mappings":"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","file":"static/js/13.82ffe22e.chunk.js","sourcesContent":["import React, { lazy, useState, useEffect } from \"react\";\nimport { Dialog, Button, EyeOpenIcon, Pill } from 'evergreen-ui';\n\nconst SkillsGrid = lazy(() => import(\"./Skills\"))\n\n\nfunction SkillPane() {\n  const [ isShown, setIsShown ] = useState(false)\n\n  const [ skills, setSkills] = useState([]);\n\n  useEffect(() => {\n    if (skills.length === 0) {\n      fetch(\"https://notion-back.hoid.dev/api/skills\").then((resp) =>\n        resp.json().then((resp_data) => setSkills(resp_data))\n      )\n    }\n  }, [skills]);\n\n  return (\n    <React.Fragment>\n      <Dialog\n        isShown={isShown}\n        title=\"My Skills\"\n        onCloseComplete={() => setIsShown(false)}\n        hasFooter={false}\n        height=\"80%\"\n        width=\"75%\"\n      >\n        <SkillsGrid skills={skills}/>\n      </Dialog>\n      <Button\n        style={{color: \"black\"}}\n        height={32}\n        intent=\"none\"\n        iconBefore={EyeOpenIcon}\n        onClick={() => setIsShown(true)}\n        margin={8}\n        isLoading={!skills.length}\n      >\n        Skills <Pill display=\"inline-flex\" marginLeft={8}>{skills.length || \"...\"}</Pill>\n      </Button>\n    </React.Fragment>\n  )\n}\n\nexport default SkillPane","import React, { lazy, Suspense } from \"react\";\nimport { Dialog, Button, InfoSignIcon } from 'evergreen-ui';\n\nimport Spinner from '../../common/Spinner';\n\n\nconst SummaryInfo = lazy(() => import(\"./SummaryInfo\"))\n\n\nclass Summary extends React.Component {\n\n  state = {\n    isShown: false\n  }\n\n  togglePane = (isShown) => this.setState({ isShown });\n\n  render() {\n    return (\n    <React.Fragment>\n      <Dialog\n        isShown={this.state.isShown}\n        title=\"Summary\"\n        onCloseComplete={() => this.togglePane(false)}\n        hasFooter={false}\n        height=\"80%\"\n        width=\"75%\"\n      >\n        <Suspense fallback={<Spinner />}>\n          <SummaryInfo />\n        </Suspense>\n      </Dialog>\n      <Button\n        style={{color: \"black\"}}\n        height={32}\n        intent=\"none\"\n        iconBefore={InfoSignIcon}\n        onClick={() => this.togglePane(true)}\n        margin={8}\n      >\n        Summary\n      </Button>\n    </React.Fragment>\n  )};\n}\n\nexport default Summary","import React from \"react\";\n\nimport { Button, Image } from 'evergreen-ui';\nimport { InlineIcon } from '@iconify/react';\n\n\nfunction HomePaneLink({ icon, color, title, url: href, style, size = \"1.25em\" }) {\n  return (\n    <Button\n      is=\"a\" target=\"blank\" appearance=\"minimal\" height={32} maxWidth={60}\n      intent=\"none\" margin={4} key={title} {...{href, style}}\n    >\n      {\n        typeof icon === 'string' ? (\n          <Image src={icon} width={\"90%\"} height={\"35%\"} />\n        ) : (\n          <InlineIcon width={size} height={size} {...{icon, color}}>\n            {title}\n          </InlineIcon>\n        )\n      }\n    </Button>\n  )\n}\n\nexport default HomePaneLink;","import telegramIcon from '@iconify/icons-logos/telegram';\nimport facebookIcon from '@iconify/icons-logos/facebook';\nimport linkedinIcon from '@iconify/icons-cib/linkedin';\nimport twitterIcon from '@iconify/icons-logos/twitter';\nimport devIcon from '@iconify/icons-fa-brands/dev';\nimport githubIcon from '@iconify/icons-fa-brands/github';\nimport habrIcon from '@iconify/icons-cib/habr';\nimport wavingHand from '@iconify-icons/noto/waving-hand';\nimport hryvniaaltIcon from '@iconify/icons-whh/hryvnia'\n\nexport default {\n  links: [\n    { icon: githubIcon, title: \"Github\", url: \"https://github.com/dmytrohoi\", color: \"black\" },\n    { icon: twitterIcon, title: \"Twitter\", url: \"https://twitter.com/dmytrohoi\" },\n    { icon: linkedinIcon, title: \"Linkedin\", url: \"https://linkedin.com/in/dmytrohoi\", color: \"#0e76a8\" },\n    { icon: devIcon, title: \"Dev.To\", url: \"https://dev.to/dmytrohoi\", color: \"black\" },\n    { icon: habrIcon, title: \"Habr.com\", url: \"https://habr.com/users/dmytrohoi\", color: \"#89aab8\" },\n    { icon: telegramIcon, title: \"Telegram\", url: \"https://t.me/dmytrohoi\" },\n    { icon: facebookIcon, title: \"Facebook\", url: \"https://fb.com/dmytrohoi\" },\n    { icon: wavingHand, title: \"Clubhouse\", url: \"https://joinclubhouse.com/@dmytrohoi\", size: \"1.5em\" },\n    { icon: \"/img/dou-logo.png\", title: \"DOU\", url: \"https://dou.ua/users/dmytro-hoi/\" }\n  ],\n  buttons: [\n    { icon: telegramIcon, title: \"higaindev\", url: \"https://t.me/higaindev\", indent: \"none\" },\n    { icon: hryvniaaltIcon, title: \"Donate\", url: \"https://dmytrohoi.com/donate\", indent: \"warning\" },\n  ]\n}\n","import React from \"react\";\n\nimport HomePaneLink from \"./HomePaneLink\";\n\nimport store from '../../../stores/LinksStore';\n\n\nfunction LinksPane () {\n  return (\n    <div>\n      {store.links.map(link => <HomePaneLink key={link.title} {...link} />)}\n      <br />\n    </div>\n  )\n}\n\nexport default LinksPane;\n","import React from \"react\";\nimport { Image, Link } from 'evergreen-ui';\n\n\nfunction Badge({link, image, alt}) {\n  return (\n    <Link height=\"1.25em\" style={{marginRight: 8}} as=\"a\" href={link} >\n      <Image src={image} alt={alt} />\n    </Link>\n  )\n}\n\nexport default Badge;\n","import React, { useState, useEffect } from \"react\";\nimport { Pane } from 'evergreen-ui';\nimport CustomSpinner from \"../../common/Spinner\";\n\nimport Badge from './Badge';\n\n\nexport default () => {\n  const [badges, setBadges] = useState([]);\n\n  useEffect(() => {\n    if (badges.length === 0) {\n      fetch(\"https://notion-back.hoid.dev/api/badges\").then((resp) =>\n      resp.json().then((resp_data) => setBadges(resp_data))\n    )\n    }\n  });\n\n  if (badges.length === 0) {\n    return (\n      <CustomSpinner height={10} />\n    )\n  }\n\n  return (\n    <Pane margin={4}>\n      {\n        badges.map(\n          badge => badge.link ? <Badge key={badge.alt} {...badge} /> : <br />\n        )\n      }\n    </Pane>\n  )\n}\n","import React from \"react\";\nimport { Pane, Heading, Button, DocumentOpenIcon } from 'evergreen-ui';\n\nimport { InlineIcon } from '@iconify/react';\nimport pythonIcon from '@iconify/icons-logos/python';\n\n// Custom components\nimport SkillPane from './skills/SkillsPane';\nimport Summary from './summary/SummaryPane';\nimport LinksPane from \"./links/LinksPane\";\nimport Badges from './badges/Badges';\n\n\nexport default function About () {\n  return (\n    <Pane\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      padding={16}\n    >\n\n      <Pane>\n        <picture>\n          <source type=\"image/webp\" srcSet=\"/img/profile.webp\" />\n          <source type=\"image/png\" srcSet=\"/img/profile.png\" />\n          <img src='/img/profile.png' alt=\"Dmytro Hoi\" width=\"200px;\"/>\n        </picture>\n      </Pane>\n\n      <Pane\n        paddingLeft=\"1em\"\n      >\n        <Heading size={800} marginTop=\"default\">Dmytro Hoi</Heading>\n        <Heading size={600} marginTop=\"default\" marginBottom=\"default\">\n          <InlineIcon icon={pythonIcon} /> Python Developer\n        </Heading>\n        <Summary />\n        <SkillPane />\n        <Button\n          height={32}\n          margin={8}\n          intent=\"none\"\n          iconBefore={DocumentOpenIcon}\n          is=\"a\" href=\"/cv\" target=\"blank\"\n        >\n          CV\n        </Button>\n        <br />\n        <LinksPane />\n        <br />\n        <Badges />\n      </Pane>\n    </Pane>\n  )\n}\n"],"sourceRoot":""}