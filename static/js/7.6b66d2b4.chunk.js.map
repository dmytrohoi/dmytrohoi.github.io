{"version":3,"sources":["components/articles/ArticlesStore.js","components/articles/Articles.js"],"names":["topic","lang","title","desc","date","link","topics","code","color","description","civic","poems","ArticleTitle","Link","marginRight","is","href","target","height","icon","LinkIcon","Tooltip","content","marginLeft","HelpIcon","Articles","Pane","flexWrap","wordWrap","padding","Heading","size","margin","articleLine","width","data","Promise","resolve","setTimeout","articles","columns","id","name","formatter","topicInfo","_","Badge","articleInfo","filter","article","twotoneLanguage","search","className","container","table"],"mappings":"iWACe,GACX,CACEA,MAAO,OACPC,KAAM,MACNC,MAAO,kTACPC,KAAM,iEACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,OACPC,KAAM,MACNC,MAAO,6PACPC,KAAM,+DACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,OACPC,KAAM,MACNC,MAAO,kJACPC,KAAM,yCACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,uPACPC,KAAM,kDACNC,KAAM,aACNC,KAAM,oDAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,mTACPC,KAAM,yGACNC,KAAM,aACNC,KAAM,+CAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,gLACPC,KAAM,2BACNC,KAAM,aACNC,KAAM,2CC/BNC,EAAS,CACbC,KAAM,CAACC,MAAO,QAASC,YAAa,8BACpCC,MAAO,CAACF,MAAO,SAAUC,YAAa,6CACtCE,MAAO,CAACH,MAAO,MAAOC,YAAa,0BAI/BG,EAAe,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAMF,EAAhB,EAAgBA,KAAhB,OACnB,6BACIE,EAAO,kBAACQ,EAAA,EAAD,CAAMC,YAAa,GAAIC,GAAG,IAAIC,KAAMX,EAAMY,OAAO,SACxD,kBAAC,IAAD,CAAMC,OAAQ,GAAIC,KAAMC,OAChB,KACTlB,EACCC,EAAO,kBAACkB,EAAA,EAAD,CAASC,QAASnB,GACvB,kBAAC,IAAD,CAAMoB,WAAY,EAAGL,OAAQ,EAAGC,KAAMK,IAAUhB,MAAM,aAC7C,OAKF,SAASiB,IACtB,OACE,kBAACC,EAAA,EAAD,CACEC,SAAS,OACTC,SAAS,aACTC,QAAS,IAGT,kBAACH,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAASC,KAAM,IAAKC,OAAO,WAAU,kBAAC,aAAD,CAAYb,KAAMc,IAAaC,MAAO,GAAIhB,OAAQ,KAAvF,cAGF,kBAACQ,EAAA,EAAD,KACE,kBAAC,IAAD,CACES,KAAM,WACJ,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,kBACTD,EAAQE,KAAW,SAGzBC,QAAS,CAAC,CACRC,GAAI,QACJC,KAAM,QACNC,UAAW,SAAC3C,GACV,IAAI4C,EAAYtC,EAAON,GACvB,OAAO6C,YACL,kBAACxB,EAAA,EAAD,CAASC,QAASsB,EAAUnC,aAC1B,kBAACqC,EAAA,EAAD,CAAOtC,MAAOoC,EAAUpC,OAAQR,OAIrC,CACDyC,GAAI,QACJC,KAAM,QACNC,UAAW,SAACzC,GACV,IAAI6C,EAAcR,EAASS,QAAO,SAAAC,GAAO,OAAIA,EAAQ/C,QAAUA,KAAO,GACtE,OAAO2C,YAAE,kBAAC,EAAD,CAAcxC,KAAM0C,EAAY1C,KAAMH,MAAOA,EAAOC,KAAM4C,EAAY5C,UAEhF,CACDsC,GAAI,OACJC,KAAMG,YAAE,kBAAC,aAAD,CAAY1B,KAAM+B,OAC1BP,UAAW,SAAA1C,GAAI,OAAI4C,YAAE,kBAACC,EAAA,EAAD,KAAQ7C,MAC5B,CACDwC,GAAI,OACJC,KAAM,SAERS,QAAQ,EAKRC,UAAW,CACTC,UAAW,qBACXC,MAAO","file":"static/js/7.6b66d2b4.chunk.js","sourcesContent":["\nexport default [\n    {\n      topic: \"code\",\n      lang: \"rus\",\n      title: \"Передача динамических объектов от setup к тестовой функции в py.test\",\n      desc: \"Passing dynamic objects from setup to test function in py.test\",\n      date: \"20.08.2020\",\n      link: \"https://habr.com/ru/post/515884/\"\n    },\n    {\n      topic: \"code\",\n      lang: \"rus\",\n      title: \"GitHub Actions как CI/CD для сайта на статическом генераторе и GitHub Pages\",\n      desc: \"GitHub Actions as CI/CD for static website with GitHub Pages\",\n      date: \"06.11.2019\",\n      link: \"https://habr.com/ru/post/474668/\"\n    },\n    {\n      topic: \"code\",\n      lang: \"rus\",\n      title: \"Параметризация из файла в py.test\",\n      desc: \"Parametrization from file with py.test\",\n      date: \"23.10.2019\",\n      link: \"https://habr.com/ru/post/472766/\"\n    },\n    {\n      topic: \"civic\",\n      lang: \"ukr\",\n      title: \"Студенти та бюрократія врятують університети\",\n      desc: \"Students and bureaucracy will save universities\",\n      date: \"21.10.2017\",\n      link: \"https://studway.com.ua/studenti-ta-byurokratiya/\"\n    },\n    {\n      topic: \"civic\",\n      lang: \"ukr\",\n      title: \"Чим запам’ятатися у виші, окрім імені у списку випускників?\",\n      desc: \"How will can remember you in a higher education institution, except for the name on the graduate list?\",\n      date: \"11.09.2017\",\n      link: \"https://studway.com.ua/chim-zapamyatatisya/\"\n    },\n    {\n      topic: \"civic\",\n      lang: \"ukr\",\n      title: \"Звертаюся до тебе, першокурснику!\",\n      desc: \"I talk to you, freshman!\",\n      date: \"09.08.2017\",\n      link: \"https://studway.com.ua/pershokursniku/\"\n    },\n    // { topic: \"poems\", title: \"Check Poems\", date: \"10.10.2019\", link: \"\" },\n  ]\n","\nimport React from \"react\";\nimport { Pane, Heading, LinkIcon, HelpIcon, Link, Icon, Badge, Tooltip } from 'evergreen-ui';\n\nimport './Articles.css'\n\n// Tables\nimport { _, Grid } from 'gridjs-react';\nimport \"gridjs/dist/theme/mermaid.min.css\";\n\n// Icons\nimport { InlineIcon } from '@iconify/react';\nimport articleLine from '@iconify/icons-ri/article-line';\nimport twotoneLanguage from '@iconify/icons-ic/twotone-language';\n\nimport articles from './ArticlesStore';\n\nconst topics = {\n  code: {color: \"green\", description: \"Articles about programming\"},\n  civic: {color: \"yellow\", description: \"Articles on the topic of civic engagement\"},\n  poems: {color: \"red\", description: \"Poems and other prose\"}\n}\n\n\nconst ArticleTitle = ({ title, link, desc }) => (\n  <div>\n    { link ? <Link marginRight={12} is=\"a\" href={link} target=\"blank\">\n      <Icon height={24} icon={LinkIcon} />\n    </Link> : null }\n    {title}\n    { desc ? <Tooltip content={desc}>\n        <Icon marginLeft={8} height={5} icon={HelpIcon} color=\"#8c8c8c\" />\n    </Tooltip> : null}\n    </div>\n)\n\n\nexport default function Articles() {\n  return (\n    <Pane\n      flexWrap=\"wrap\"\n      wordWrap=\"break-word\"\n      padding={16}\n    >\n\n      <Pane>\n        <Heading size={800} margin=\"default\"><InlineIcon icon={articleLine} width={24} height={24} /> Articles</Heading>\n      </Pane>\n\n      <Pane>\n        <Grid\n          data={() => {\n            return new Promise(resolve => {\n              setTimeout(() =>\n                resolve(articles), 2000);\n            });\n          }}\n          columns={[{\n            id: 'topic',\n            name: \"Topic\",\n            formatter: (topic) => {\n              let topicInfo = topics[topic]\n              return _(\n                <Tooltip content={topicInfo.description}>\n                  <Badge color={topicInfo.color}>{topic}</Badge>\n                </Tooltip>\n              )\n            }\n          }, {\n            id: 'title',\n            name: 'Title',\n            formatter: (title) => {\n              let articleInfo = articles.filter(article => article.title === title)[0];\n              return _(<ArticleTitle link={articleInfo.link} title={title} desc={articleInfo.desc} />)\n            }\n          }, {\n            id: 'lang',\n            name: _(<InlineIcon icon={twotoneLanguage}/>),\n            formatter: lang => _(<Badge>{lang}</Badge>)\n          }, {\n            id: 'date',\n            name: 'Date'\n          }]}\n          search={true}\n          // pagination={{\n          //   enabled: true,\n          //   limit: 20\n          // }}\n          className={{\n            container: \"articles-container\",\n            table: \"articles-table\"\n          }}\n        />\n      </Pane>\n    </Pane>\n  )\n}\n"],"sourceRoot":""}