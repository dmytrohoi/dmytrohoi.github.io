{"version":3,"sources":["components/common/PageHeader.js","components/articles/ArticlesStore.js","components/articles/ArticlesTable.js","components/articles/Articles.js"],"names":["PageHeader","icon","text","size","margin","width","height","ArticleTopics","code","color","description","civic","poems","ArticlesData","topic","lang","title","desc","date","link","ArticleLink","Link","marginRight","is","href","target","LinkIcon","ArticleDesc","Tooltip","content","marginLeft","HelpIcon","ArticleTitle","ArticleTopic","Badge","ArticlesTable","data","Promise","resolve","setTimeout","columns","id","name","formatter","_","articleInfo","filter","article","twotoneLanguage","search","className","container","table","Articles","Pane","flexWrap","wordWrap","padding","articleLine"],"mappings":"8HAAA,sCAWeA,IANI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OACf,kBAAC,IAAD,CAASC,KAAM,IAAKC,OAAO,WACzB,kBAAC,aAAD,CAAYH,KAAMA,EAAMI,MAAO,GAAIC,OAAQ,KAD7C,IACqDJ,K,0QCP5CK,EAAgB,CAC3BC,KAAM,CACJC,MAAO,QACPC,YAAa,8BAEfC,MAAO,CACLF,MAAO,SACPC,YAAa,6CAEfE,MAAO,CACLH,MAAO,MACPC,YAAa,0BAIJG,EAAe,CAC1B,CACEC,MAAO,OACPC,KAAM,MACNC,MAAO,kTACPC,KAAM,iEACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,OACPC,KAAM,MACNC,MAAO,6PACPC,KAAM,+DACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,OACPC,KAAM,MACNC,MAAO,kJACPC,KAAM,yCACNC,KAAM,aACNC,KAAM,oCAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,uPACPC,KAAM,kDACNC,KAAM,aACNC,KAAM,oDAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,mTACPC,KAAM,yGACNC,KAAM,aACNC,KAAM,+CAER,CACEL,MAAO,QACPC,KAAM,MACNC,MAAO,gLACPC,KAAM,2BACNC,KAAM,aACNC,KAAM,2CC/CJC,EAAc,SAAC,GAAD,IAAED,EAAF,EAAEA,KAAF,OAChB,kBAACE,EAAA,EAAD,CAAMC,YAAa,GAAIC,GAAG,IAAIC,KAAML,EAAMM,OAAO,SAC7C,kBAAC,IAAD,CAAMnB,OAAQ,GAAIL,KAAMyB,QAI1BC,EAAc,SAAC,GAAD,IAAEV,EAAF,EAAEA,KAAF,OAChB,kBAACW,EAAA,EAAD,CAASC,QAASZ,GACd,kBAAC,IAAD,CAAMa,WAAY,EAAGxB,OAAQ,EAAGL,KAAM8B,IAAUtB,MAAM,cAIxDuB,EAAe,SAAC,GAAD,IAAGhB,EAAH,EAAGA,MAAOG,EAAV,EAAUA,KAAMF,EAAhB,EAAgBA,KAAhB,OACjB,6BACGE,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,IAC3BH,EACAC,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,MAI5BgB,EAAe,SAAC,GAAD,IAAEnB,EAAF,EAAEA,MAAOG,EAAT,EAASA,KAAMR,EAAf,EAAeA,MAAf,OACjB,kBAACmB,EAAA,EAAD,CAASC,QAASZ,GACd,kBAACiB,EAAA,EAAD,CAAOzB,MAAOA,GAAQK,KAgDfqB,EA3CO,kBAClB,kBAAC,IAAD,CACIC,KAAM,WACF,OAAO,IAAIC,SAAQ,SAAAC,GACfC,YAAW,kBACPD,EAAQzB,KAAe,SAGnC2B,QAAS,CAAC,CACNC,GAAI,QACJC,KAAM,QACNC,UAAW,SAAA7B,GAAK,OAAI8B,YAAE,kBAAC,EAAD,CAClB9B,MAAOA,EACPG,KAAMV,EAAcO,GAAOJ,YAC3BD,MAAOF,EAAcO,GAAOL,WAEjC,CACCgC,GAAI,QACJC,KAAM,QACNC,UAAW,SAAC3B,GACR,IAAM6B,EAAchC,EAAaiC,QAAO,SAAAC,GAAO,OAAIA,EAAQ/B,QAAUA,KAAO,GAC5E,OAAO4B,YAAE,kBAAC,EAAD,CAAczB,KAAM0B,EAAY1B,KAAMH,MAAOA,EAAOC,KAAM4B,EAAY5B,UAEpF,CACCwB,GAAI,OACJC,KAAME,YAAE,kBAAC,aAAD,CAAY3C,KAAM+C,OAC1BL,UAAW,SAAA5B,GAAI,OAAI6B,YAAE,kBAACV,EAAA,EAAD,KAAQnB,MAC9B,CACC0B,GAAI,OACJC,KAAM,SAEVO,QAAQ,EAKRC,UAAW,CACPC,UAAW,qBACXC,MAAO,qBCnEJ,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,CACEC,SAAS,OACTC,SAAS,aACTC,QAAS,IAGT,kBAACH,EAAA,EAAD,KACE,kBAACtD,EAAA,EAAD,CAAYC,KAAMyD,IAAaxD,KAAK,cAGtC,kBAACoD,EAAA,EAAD,KACE,kBAAC,EAAD","file":"static/js/8.8b3c5293.chunk.js","sourcesContent":["import React from 'react';\nimport { Heading } from 'evergreen-ui';\n\nimport { InlineIcon } from '@iconify/react';\n\nconst PageHeader = ({icon, text}) => (\n    <Heading size={800} margin=\"default\">\n      <InlineIcon icon={icon} width={24} height={24} /> {text}\n    </Heading>\n  )\n\nexport default PageHeader;\n","export const ArticleTopics = {\n  code: {\n    color: \"green\",\n    description: \"Articles about programming\"\n  },\n  civic: {\n    color: \"yellow\",\n    description: \"Articles on the topic of civic engagement\"\n  },\n  poems: {\n    color: \"red\",\n    description: \"Poems and other prose\"\n  }\n}\n\nexport const ArticlesData = [\n  {\n    topic: \"code\",\n    lang: \"rus\",\n    title: \"Передача динамических объектов от setup к тестовой функции в py.test\",\n    desc: \"Passing dynamic objects from setup to test function in py.test\",\n    date: \"20.08.2020\",\n    link: \"https://habr.com/ru/post/515884/\"\n  },\n  {\n    topic: \"code\",\n    lang: \"rus\",\n    title: \"GitHub Actions как CI/CD для сайта на статическом генераторе и GitHub Pages\",\n    desc: \"GitHub Actions as CI/CD for static website with GitHub Pages\",\n    date: \"06.11.2019\",\n    link: \"https://habr.com/ru/post/474668/\"\n  },\n  {\n    topic: \"code\",\n    lang: \"rus\",\n    title: \"Параметризация из файла в py.test\",\n    desc: \"Parametrization from file with py.test\",\n    date: \"23.10.2019\",\n    link: \"https://habr.com/ru/post/472766/\"\n  },\n  {\n    topic: \"civic\",\n    lang: \"ukr\",\n    title: \"Студенти та бюрократія врятують університети\",\n    desc: \"Students and bureaucracy will save universities\",\n    date: \"21.10.2017\",\n    link: \"https://studway.com.ua/studenti-ta-byurokratiya/\"\n  },\n  {\n    topic: \"civic\",\n    lang: \"ukr\",\n    title: \"Чим запам’ятатися у виші, окрім імені у списку випускників?\",\n    desc: \"How will can remember you in a higher education institution, except for the name on the graduate list?\",\n    date: \"11.09.2017\",\n    link: \"https://studway.com.ua/chim-zapamyatatisya/\"\n  },\n  {\n    topic: \"civic\",\n    lang: \"ukr\",\n    title: \"Звертаюся до тебе, першокурснику!\",\n    desc: \"I talk to you, freshman!\",\n    date: \"09.08.2017\",\n    link: \"https://studway.com.ua/pershokursniku/\"\n  },\n  // { topic: \"poems\", title: \"Check Poems\", date: \"10.10.2019\", link: \"\" },\n]\n","import React from \"react\";\nimport { LinkIcon, HelpIcon, Link, Icon, Badge, Tooltip } from 'evergreen-ui';\n\n// Table\nimport { _, Grid } from 'gridjs-react';\nimport \"gridjs/dist/theme/mermaid.min.css\";\n\n// Icons\nimport { InlineIcon } from '@iconify/react';\nimport twotoneLanguage from '@iconify/icons-ic/twotone-language';\n\n// Data\nimport { ArticlesData, ArticleTopics } from './ArticlesStore';\n\n\nconst ArticleLink = ({link}) => (\n    <Link marginRight={12} is=\"a\" href={link} target=\"blank\">\n        <Icon height={24} icon={LinkIcon} />\n    </Link>\n)\n\nconst ArticleDesc = ({desc}) => (\n    <Tooltip content={desc}>\n        <Icon marginLeft={8} height={5} icon={HelpIcon} color=\"#8c8c8c\" />\n    </Tooltip>\n)\n\nconst ArticleTitle = ({ title, link, desc }) => (\n    <div>\n      {link && <ArticleLink link={link} />}\n      {title}\n      {desc && <ArticleDesc desc={desc} />}\n    </div>\n  )\n\nconst ArticleTopic = ({topic, desc, color}) => (\n    <Tooltip content={desc}>\n        <Badge color={color}>{topic}</Badge>\n    </Tooltip>\n)\n\n\nconst ArticlesTable = () => (\n    <Grid\n        data={() => {\n            return new Promise(resolve => {\n                setTimeout(() =>\n                    resolve(ArticlesData), 2000);\n            });\n        }}\n        columns={[{\n            id: 'topic',\n            name: \"Topic\",\n            formatter: topic => _(<ArticleTopic\n                topic={topic}\n                desc={ArticleTopics[topic].description}\n                color={ArticleTopics[topic].color}\n            />)\n        }, {\n            id: 'title',\n            name: 'Title',\n            formatter: (title) => {\n                const articleInfo = ArticlesData.filter(article => article.title === title)[0];\n                return _(<ArticleTitle link={articleInfo.link} title={title} desc={articleInfo.desc} />)\n            }\n        }, {\n            id: 'lang',\n            name: _(<InlineIcon icon={twotoneLanguage} />),\n            formatter: lang => _(<Badge>{lang}</Badge>)\n        }, {\n            id: 'date',\n            name: 'Date'\n        }]}\n        search={true}\n        // pagination={{\n        //   enabled: true,\n        //   limit: 20\n        // }}\n        className={{\n            container: \"articles-container\",\n            table: \"articles-table\"\n        }}\n    />\n);\n\nexport default ArticlesTable;\n","import React from \"react\";\nimport { Pane } from 'evergreen-ui';\n\nimport './Articles.css'\n\n// Icon\nimport articleLine from '@iconify/icons-ri/article-line';\n\n// Components\nimport PageHeader from '../common/PageHeader';\nimport ArticlesTable from './ArticlesTable';\n\n\nexport default function Articles() {\n  return (\n    <Pane\n      flexWrap=\"wrap\"\n      wordWrap=\"break-word\"\n      padding={16}\n    >\n\n      <Pane>\n        <PageHeader icon={articleLine} text=\"Articles\" />\n      </Pane>\n\n      <Pane>\n        <ArticlesTable />\n      </Pane>\n    </Pane>\n  )\n}\n"],"sourceRoot":""}