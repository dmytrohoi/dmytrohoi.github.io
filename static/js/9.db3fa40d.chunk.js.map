{"version":3,"sources":["components/common/PageHeader.js","components/articles/ArticleTopics.js","components/articles/ArticlesTable.js","components/articles/Articles.js"],"names":["PageHeader","icon","text","size","margin","width","height","ArticleTopics","code","color","description","civic","poems","business","ArticleLink","link","Link","marginRight","is","href","target","LinkIcon","ArticleDesc","desc","Tooltip","content","marginLeft","HelpIcon","ArticleTitle","title","ArticleTopic","topic","Badge","ArticlesTable","useState","data","setData","useEffect","length","fetch","then","resp","json","resp_data","columns","id","name","formatter","_","articleInfo","filter","article","twotoneLanguage","lang","date","replaceAll","search","className","container","table","Articles","Pane","flexWrap","wordWrap","padding","articleLine"],"mappings":"8HAAA,sCAWeA,IANI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAR,OACf,kBAAC,IAAD,CAASC,KAAM,IAAKC,OAAO,WACzB,kBAAC,aAAD,CAAYH,KAAMA,EAAMI,MAAO,GAAIC,OAAQ,KAD7C,IACqDJ,K,2RCP5CK,EAAgB,CAC3BC,KAAM,CACJC,MAAO,QACPC,YAAa,8BAEfC,MAAO,CACLF,MAAO,SACPC,YAAa,6CAEfE,MAAO,CACLH,MAAO,MACPC,YAAa,yBAEfG,SAAU,CACRJ,MAAO,OACPC,YAAa,6BCCXI,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAACC,EAAA,EAAD,CAAMC,YAAa,GAAIC,GAAG,IAAIC,KAAMJ,EAAMK,OAAO,SAC/C,kBAAC,IAAD,CAAMd,OAAQ,GAAIL,KAAMoB,QAItBC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,kBAACC,EAAA,EAAD,CAASC,QAASF,GAChB,kBAAC,IAAD,CAAMG,WAAY,EAAGpB,OAAQ,EAAGL,KAAM0B,IAAUlB,MAAM,cAIpDmB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOd,EAAV,EAAUA,KAAMQ,EAAhB,EAAgBA,KAAhB,OACnB,6BACGR,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,IAC3Bc,EACAN,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,MAI1BO,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOR,EAAV,EAAUA,KAAMd,EAAhB,EAAgBA,MAAhB,OACnB,kBAACe,EAAA,EAAD,CAASC,QAASF,GAChB,kBAACS,EAAA,EAAD,CAAOvB,MAAOA,GAAQsB,KA4EXE,EAxEO,WAAO,IAAD,EACFC,mBAAS,IADP,mBACnBC,EADmB,KACbC,EADa,KAW1B,OARAC,qBAAU,WACY,IAAhBF,EAAKG,QACPC,MAAM,6CAA6CC,MAAK,SAACC,GAAD,OACxDA,EAAKC,OAAOF,MAAK,SAACG,GAAD,OAAeP,EAAQO,YAKxB,IAAhBR,EAAKG,OAEL,kBAAC,IAAD,MAIF,kBAAC,IAAD,CACEH,KAAMA,EACNS,QAAS,CACP,CACEC,GAAI,QACJC,KAAM,QACNC,UAAW,SAAChB,GAAD,OACTiB,YACE,kBAAC,EAAD,CACEjB,MAAOA,EACPR,KAAMhB,EAAcwB,GAAOrB,YAC3BD,MAAOF,EAAcwB,GAAOtB,WAIpC,CACEoC,GAAI,QACJC,KAAM,QACNC,UAAW,SAAClB,GACV,IAAMoB,EAAcd,EAAKe,QACvB,SAACC,GAAD,OAAaA,EAAQtB,QAAUA,KAC/B,GACF,OAAOmB,YACL,kBAAC,EAAD,CACEjC,KAAMkC,EAAYlC,KAClBc,MAAOA,EACPN,KAAM0B,EAAY1B,UAK1B,CACEsB,GAAI,OACJC,KAAME,YAAE,kBAAC,aAAD,CAAY/C,KAAMmD,OAC1BL,UAAW,SAACM,GAAD,OAAUL,YAAE,kBAAChB,EAAA,EAAD,KAAQqB,MAEjC,CACER,GAAI,OACJC,KAAM,OACNC,UAAW,SAACO,GAAD,OAAUA,EAAKC,WAAW,IAAK,QAG9CC,QAAQ,EAKRC,UAAW,CACTC,UAAW,qBACXC,MAAO,qBC/FA,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,CACEC,SAAS,OACTC,SAAS,aACTC,QAAS,IAGT,kBAACH,EAAA,EAAD,KACE,kBAAC7D,EAAA,EAAD,CAAYC,KAAMgE,IAAa/D,KAAK,cAGtC,kBAAC2D,EAAA,EAAD,KACE,kBAAC,EAAD","file":"static/js/9.db3fa40d.chunk.js","sourcesContent":["import React from 'react';\nimport { Heading } from 'evergreen-ui';\n\nimport { InlineIcon } from '@iconify/react';\n\nconst PageHeader = ({icon, text}) => (\n    <Heading size={800} margin=\"default\">\n      <InlineIcon icon={icon} width={24} height={24} /> {text}\n    </Heading>\n  )\n\nexport default PageHeader;\n","export const ArticleTopics = {\n  code: {\n    color: \"green\",\n    description: \"Articles about programming\"\n  },\n  civic: {\n    color: \"yellow\",\n    description: \"Articles on the topic of civic engagement\"\n  },\n  poems: {\n    color: \"red\",\n    description: \"Poems and other prose\"\n  },\n  business: {\n    color: \"blue\",\n    description: \"Business and PM articles\"\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { LinkIcon, HelpIcon, Link, Icon, Badge, Tooltip } from \"evergreen-ui\";\nimport CustomSpinner from \"../common/Spinner\";\n\n// Table\nimport { _, Grid } from \"gridjs-react\";\nimport \"gridjs/dist/theme/mermaid.min.css\";\n\n// Icons\nimport { InlineIcon } from \"@iconify/react\";\nimport twotoneLanguage from \"@iconify/icons-ic/twotone-language\";\n\n// Data\nimport { ArticleTopics } from \"./ArticleTopics\";\n\n\nconst ArticleLink = ({ link }) => (\n  <Link marginRight={12} is=\"a\" href={link} target=\"blank\">\n    <Icon height={24} icon={LinkIcon} />\n  </Link>\n);\n\nconst ArticleDesc = ({ desc }) => (\n  <Tooltip content={desc}>\n    <Icon marginLeft={8} height={5} icon={HelpIcon} color=\"#8c8c8c\" />\n  </Tooltip>\n);\n\nconst ArticleTitle = ({ title, link, desc }) => (\n  <div>\n    {link && <ArticleLink link={link} />}\n    {title}\n    {desc && <ArticleDesc desc={desc} />}\n  </div>\n);\n\nconst ArticleTopic = ({ topic, desc, color }) => (\n  <Tooltip content={desc}>\n    <Badge color={color}>{topic}</Badge>\n  </Tooltip>\n);\n\nconst ArticlesTable = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (data.length === 0) {\n      fetch(\"https://notion-back.hoid.dev/api/articles\").then((resp) =>\n      resp.json().then((resp_data) => setData(resp_data))\n    )\n    }\n  });\n\n  if (data.length === 0) {\n    return (\n      <CustomSpinner />\n    )\n  }\n  return (\n    <Grid\n      data={data}\n      columns={[\n        {\n          id: \"topic\",\n          name: \"Topic\",\n          formatter: (topic) =>\n            _(\n              <ArticleTopic\n                topic={topic}\n                desc={ArticleTopics[topic].description}\n                color={ArticleTopics[topic].color}\n              />\n            ),\n        },\n        {\n          id: \"title\",\n          name: \"Title\",\n          formatter: (title) => {\n            const articleInfo = data.filter(\n              (article) => article.title === title\n            )[0];\n            return _(\n              <ArticleTitle\n                link={articleInfo.link}\n                title={title}\n                desc={articleInfo.desc}\n              />\n            );\n          },\n        },\n        {\n          id: \"lang\",\n          name: _(<InlineIcon icon={twotoneLanguage} />),\n          formatter: (lang) => _(<Badge>{lang}</Badge>),\n        },\n        {\n          id: \"date\",\n          name: \"Date\",\n          formatter: (date) => date.replaceAll(\"-\", \"/\"),\n        },\n      ]}\n      search={true}\n      // pagination={{\n      //   enabled: true,\n      //   limit: 20\n      // }}\n      className={{\n        container: \"articles-container\",\n        table: \"articles-table\",\n      }}\n    />\n  );\n};\n\nexport default ArticlesTable;\n","import React from \"react\";\nimport { Pane } from 'evergreen-ui';\n\nimport './Articles.css'\n\n// Icon\nimport articleLine from '@iconify/icons-ri/article-line';\n\n// Components\nimport PageHeader from '../common/PageHeader';\nimport ArticlesTable from './ArticlesTable';\n\n\nexport default function Articles() {\n  return (\n    <Pane\n      flexWrap=\"wrap\"\n      wordWrap=\"break-word\"\n      padding={16}\n    >\n\n      <Pane>\n        <PageHeader icon={articleLine} text=\"Articles\" />\n      </Pane>\n\n      <Pane>\n        <ArticlesTable />\n      </Pane>\n    </Pane>\n  )\n}\n"],"sourceRoot":""}